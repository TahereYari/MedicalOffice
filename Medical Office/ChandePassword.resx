<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAkIJ1AJuFbwCTg3N0lINz/5SDc5SbgXkAlIJyTpSDc/aUg3O/k4B0DJOD
        cySUg3PllINz5ZODcySTgHQMlINzv5SDc/aUgnJOm4F5AJSDc5SUg3P/k4NzdJuFbwCQgnUAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQgnUAm4VvAJODc3CUg3P9lINzkJuBeACUgnJLlINz75SD
        c7qTgnMLk4NzI5SDc96Ug3Pek4NzI5OCcwuUg3O6lINz75SCckubgXgAlINzkJSDc/2Tg3Nwm4VvAJCC
        dQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJGDdACWg28Ak4NyG5ODcj2Tg3IjjYp0AJSD
        cxKTg3I6k4NyLZGFcQOUgnIIk4NyNpODcjaUgnIIkYVxA5ODci2Tg3I6lINzEo2KdACTg3Ijk4NyPZOD
        chuWg28AkYN0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA24hRAOef
        RgDhlEsD45dKB+OXSgfjl0oH45dKB+OXSgfjl0oH45dKB+OXSgfjl0oH45dKB+OXSgfjl0oH45dKB+OX
        Sgfjl0oH45dKB+GUSwPnn0YA24hRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADkl00A4pdLAOOXTD7jl0yf45dMn+OXTJ/jl0yf45dMn+OXTJ/jl0yf45dMn+OXTJ/jl0yf45dMn+OX
        TJ/jl0yf45dMn+OXTJ/jl0yf45dMPuKXSwDkl00AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOWZTADhlUwA45dMZOOXTP/jl0z/45dM/+OXTP/jl0z/45dM/+OXTP/jl0z/45dM/+OX
        TP/jl0z/45dM/+OXTP/jl0z/45dM/+OXTP/jl0xk4ZVMAOWZTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA5ZlMAOGVTADjl0xk45dM/+OXTP/jl0z/45dM/+OXTP/jl0z/45dM/+OW
        S//jlkv/45dM/+OXTP/jl0z/45dM/+OXTP/jl0z/45dM/+OXTGThlUwA5ZlMAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADlmUwA4ZVMAOOXTGTjl0z/45dM/+OXTP/jl0z/45dM/+OW
        S//ln1r/78Wc/+/FnP/ln1r/45ZL/+OXTP/jl0z/45dM/+OXTP/jl0z/45dMZOGVTADlmUwAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOWZTADhlUwA45dMZOOXTP/jl0z/45dM/+OX
        TP/jl0z/45ZK/+ioav/++fT//vn0/+ioav/jlkr/45dM/+OXTP/jl0z/45dM/+OXTP/jl0xk4ZVMAOWZ
        TAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5ZlMAOGVTADjl0xk45dM/+OX
        TP/jl0z/45dM/+OXTP/jlkr/6Khq//759P/++fT/6Khq/+OWSv/jl0z/45dM/+OXTP/jl0z/45dM/+OX
        TGThlUwA5ZlMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADlmUwA4ZVMAOOX
        TGTjl0z/45dM/+OXTP/jl0z/45dM/+OWSv/oqGr//vn1//759f/oqGr/45ZK/+OXTP/jl0z/45dM/+OX
        TP/jl0z/45dMZOGVTADlmUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOWZ
        TADhlUwA45dMZOOXTP/jl0z/45dM/+OXTP/jl0z/45lP//DHn////fz///38//DHnv/jmU//45dM/+OX
        TP/jl0z/45dM/+OXTP/jl0xk4ZVMAOWZTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA5ZlMAOGVTADjl0xk45dM/+OXTP/jl0z/45dM/+OWSv/op2n/+/Ho////////////+/Hn/+in
        aP/jlkr/45dM/+OXTP/jl0z/45dM/+OXTGThlUwA5ZlMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADlmUwA4ZVMAOOXTGTjl0z/45dM/+OXTP/jl0z/45ZK/+ipa//88+v/////////
        ///88+v/6Klr/+OWSv/jl0z/45dM/+OXTP/jl0z/45dMZOGVTADlmUwAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOWZTADhlUwA45dMZOOXTP/jl0z/45dM/+OXTP/jl0z/5JpR//HL
        pP/89e7//PXu//HLpP/kmlH/45dM/+OXTP/jl0z/45dM/+OXTP/jl0xk4ZVMAOWZTAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5ZlMAOGVTADjl0xk45dM/+OXTP/jl0z/45dM/+OX
        TP/jl0v/5JpS/+msb//pq2//5JpS/+OXS//jl0z/45dM/+OXTP/jl0z/45dM/+OXTGThlUwA5ZlMAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADlmUwA4ZVMAOOXTGTjl0z/45dM/+OX
        TP/jl0z/45dM/+OXTP/jl0z/45ZK/+OWSv/jl0z/45dM/+OXTP/jl0z/45dM/+OXTP/jl0z/45dMZOGV
        TADlmUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOWZTADhlUwA45dMZOOX
        TP/jl0z/45dM/+OXTP/jl0z/45dM/+OXTP/jl0z/45dM/+OXTP/jl0z/45dM/+OXTP/jl0z/45dM/+OX
        TP/jl0xk4ZVMAOWZTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5ZlMAOGV
        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
        8P//D/D//w/w//8P8P//AAD//4AB//+AAf8=
</value>
  </data>
</root>