<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPKUIQDylSAT85Yha/OWIcbzliHx85Yh+/OWIefzliGt8pYhSPGV
        HwbylSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADzliEA85YhJfOWIa7zliH485Yh//OWIf/zliH/85Yh//OW
        If/zliHr85Yhf/SWIAzzliAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8pYhAPKWIRnzliG685Yh//OWIf/zliHr85Yhu/OW
        IavzliHK85Yh9/OWIf/zliH585Yhf/GVIAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPOXHwDulhcA85YhgPOWIf7zliD/85UcvPOS
        Ezr4fQAG/wAAAPOTHhLzliFk85Yh5POWIf/zliHq85YhSAAAAAAAAAAAAAAAAAAAAADpxNEA6cTQEenE
        0U3pxNFb6cTRWunE0VrpxNFa6cTRWunE0VrpxNFa6cTRWunE0VrpxNFa6cXUWey3oGbzmCfd85Yg//Kb
        NPPstZaD6cfbVenE0lroxNFO6MbWEe2zmADzliFk85Yh+POWIf/zliGsAAAAAAAAAAAAAAAAAAAAAOvG
        0QDpxNF96cTR++nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxdT/7Lii//OY
        KP/zlR//7qtz/+nE0v7pxNH/6cTR/+nE0fvpxNF97rGEAPKWIRTzliHL85Yh//OWIeYAAAAAAAAAAAAA
        AAAAAAAAGBQWAOnE0aXpxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nF
        1P/stJX/85Yi//OWH//ts47/6cXU/+nE0f/pxNH/6cTR/+nE0aXwliEA8JYhA/OWIazzliH/85Yh/AAA
        AAAAAAAAAAAAAAAAAAAYFBYA6cTRpenE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE
        0f/pxNH/6cXU/+y2nP/zlyT/8Z5B/+u7r//pxNP/6cTR/+nE0v/pxNH/6cTRpfKVIQDylSEL85YhvPOW
        If/zliHxAAAAAAAAAAAAAAAAAAAAABgUFgDpxNGl6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE
        0f/pxNH/6cTR/+nE0f/pxNL/6r23/++paf/rvLP/6cTS/+nE0f/pxNP/67ut/+u8sv/pxdOl85YhAPKW
        IT7zliHr85Yh//OWIcUAAAAAAAAAAAAAAAAAAAAAGBQWAOnE0aXpxNH/6cTR/+nE0f/pxNH/6cTR/+nE
        0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pw8//6cPM/+nE0v/pxNL/6cTQ/+y1mf/xnTv/7bSV/+nG
        2KXzliAr85YhwPOWIf/zliH485YhbAAAAAAAAAAAAAAAAAAAAADrxtMA6cTRfOnE0fzpxNH/6cTR/+nE
        0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTS/urCyv7ur3//8pkt//OW
        H//vqGj/76hm2/OWINjzliH/85Yh//KWIa3xlSATAAAAAAAAAAAAAAAAAAAAAOnD0ADpxNAQ6cPQSunE
        0VbpxNFV6cTRVenE0VXpxNFV6cTRVenE0VXpxNFV6cTRVenE0VXpxNFV6cTRVenF01TrvLFp8KNV3fOX
        Jf/zliD/85Yh//OWIf/zliD/85Yh//OWIf7zliG685YhJvOWIQAAAAAAAAAAAAAAAAAAAAAA6cTRAOnE
        0BDpxNFJ6cTRVunE0VXpxNFV6cTRVenE0VXpxNFV6cTRVenE0VXpxNFV6cTRVenE0VXpxNFV6cXUVOu8
        sGnwo1Te85cl//OWIP/zliH/85Yi//OWIvbzliHW85YhgfKWIRrzlSAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADrxtEA6cTRfenE0fvpxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE
        0f/pxNH/6cTS/urCyf7urn3/8pks//OVH//vqm7/7bKOq/KVHBvzlh8C85YgAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABgUFgDpxNGl6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE
        0f/pxNH/6cTR/+nE0f/pxNH/6cTS/+nEz//stZb/8Zw6/+20lf/pxtml6cXUAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAGBQWAOnE0aXpxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE
        0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0v/ruqz/67yx/+nF06UBAQEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYFBYA6cTRpenE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE
        0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0//pxNH/6cTRpQEB
        AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgUFgDpxNGl6cTR/+nE0f/pxNH/6cTR/+nE
        0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE
        0f/pxNGlAQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA68bTAOnE0XzpxNH86cTR/+nE
        0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE
        0f/pxNH/6cTR/OnE0XzrxNEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADpw9AA6cTQEOnD
        0ErpxNFW6cTRVenE0VXpxNFV6cTRVenE0VXpxNFV6cTRVenE0VXpxNFV6cTRVenE0VXpxNFV6cTRVenE
        0VXpxNFV6cTRVenE0VboxNFK6cPQEOjD0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOnE
        0QDpxNAQ6cTRSenE0VbpxNFV6cTRVenE0VXpxNFV6cTRVenE0VXpxNFV6cTRVenE0VXpxNFV6cTRVenE
        0VXpxNFV6cTRVenE0VXpxNFV6cTRVujD0UroxNEQ6MPQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA68bRAOnE0X3pxNH76cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE
        0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR++nE0X3rxtEAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAYFBYA6cTRpenE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE
        0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTRpQEBAQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABgUFgDpxNGl6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE
        0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNGlAQEBAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGBQWAOnE0aXpxNH/6cTR/+nE0f/pxNH/6cTR/+nE
        0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE
        0aUBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYFBYA6cTRpenE0f/pxNH/6cTR/+nE
        0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE
        0f/pxNH/6cTRpQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOvG0wDpxNF86cTR/OnE
        0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE0f/pxNH/6cTR/+nE
        0f/pxNH/6cTR/+nE0fzpxNF868TRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6cPQAOnE
        0BHpw9BO6cTRW+nE0VrpxNFa6cTRWunE0VrpxNFa6cTRWunE0VrpxNFa6cTRWunE0VrpxNFa6cTRWunE
        0VrpxNFa6cTRWunE0VrpxNFb6MTRTunD0BHow9EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///4A///8AH//+AA///gQPgAABD4AAAQ+AAAEPgAABD4AAAQ+AAAAPgA
        AAD4AAAB+AAAA/gAAAf4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gA
        AB/4AAAf+AAAH/////////////////////8=
</value>
  </data>
</root>